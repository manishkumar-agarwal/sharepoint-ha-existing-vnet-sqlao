{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sharepointFarmName": {
      "type": "string",
      "metadata": {
        "group": "basics",
        "description": "The name of the SharePoint farm"
      },
      "defaultValue": "spfarm"
    },
    "location": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The region to deploy the resources into. Only change if resources need to be deployed to a different location than the resource group."
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The name of the administrator account of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The password for the administrator account of the new VMs and Domain"
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The prefix of the new storage account created to store the VM disks. Different storage accounts will be created for AD, SQL, and SharePoint VMs."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "The type of storage account"
      },
      "defaultValue": "Premium_LRS"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "spfarmhaVNET",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Resource ID of the existing VNET. You can find the Resource ID for the VNET on the Properties blade of the VNET"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/manishkumar-agarwal/sharepoint-ha-existing-vnet-sqlao/master"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "group": "Active Directory settings",
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "sphafarm.local"
    },
    "adPdcNicIPAddress": {
      "type": "string",
      "metadata": {
        "group": "Active Directory settings",
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The SQL Server service account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The SQL Server Service account password"
      }
    },
    "primarySqlReplicaVMName": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The name of the primary SQL VMs created"
      },
      "defaultValue": " "
    },
    "secondarySqlReplicaVMName": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The name of the secondary SQL VMs created"
      },
      "defaultValue": " "
    },
    "sqlAOAGName": {
      "type": "string",
      "metadata": {
        "group": "SQL Server settings",
        "description": "The name of the SQL AlwaysOn Group created"
      },
      "defaultValue": " "
    },
    "spWebSubnetName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The address range of the SP Web subnet created in the new VNET"
      },
      "defaultValue": "10.0.2.0/24"
    },
    "spAppSubnetName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The address range of the SP App subnet created in the new VNET"
      },
      "defaultValue": "10.0.3.0/24"
    },
    "sharepointWebfqdn": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "Fully Qualified domain name for the sharepoint website"
      }
    },
    "spWebIPAddressName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The new or existing - depending on value of spWebIPNewOrExisting parameter - IP address name for SP Web "
      }
    },
    "spWebApplicationGatewayBackendPool": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The backend address pool of the application gateway used for the Web machines "
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
      }
    },
    "spVMSize": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The size of the SP VMs Created"
      },
      "defaultValue": "Standard_DS2"
    },
    "spAGPrefix": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The name of the prefix for SP Farm Availability groups to be created"
      },
      "defaultValue": " "
    },
    "spVmImage": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The custom image of the sharepoint. This can be found in the properties of the Managed image"
      },
      "defaultValue": " "
    },
    "spAppVMName1": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The name of the first SP App VM to be Created"
      },
      "defaultValue": " "
    },
    "spAppVMName2": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The name of the second SP App VM to be Created"
      },
      "defaultValue": " "
    },
    "spWebVMName1": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The name of the first SP Web VM to be Created"
      },
      "defaultValue": " "
    },
    "spWebVMName2": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The name of the second SP Web VM to be Created"
      },
      "defaultValue": " "
    },
    "sharePointSetupUserAccountUserName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Setup account name"
      },
      "defaultValue": "sp_setup"
    },
    "sharePointSetupUserAccountPassword": {
      "type": "securestring",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Setup account password"
      }
    },
    "sharePointFarmAccountUserName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Farm account name"
      },
      "defaultValue": "sp_farm"
    },
    "sharePointFarmAccountPassword": {
      "type": "securestring",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Farm account password"
      }
    },
    "sharePointFarmPassphrasePassword": {
      "type": "securestring",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Farm Passphrase"
      }
    },
    "spSiteTemplateName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Content Site Template Name"
      },
      "defaultValue": "STS#0"
    }
  },
  "variables": {
    "spCADNSPrefix": "[concat(parameters('dnsPrefix'),'admin')]",
    "spCAIPAddressName": "[concat(parameters('spWebIPAddressName'),'admin')]",
    "configDatabaseName": "SP_Config",
    "administrationContentDatabaseName": "SP_AdminContent",
    "contentDatabaseName": "spfarm_Content",
    "lbSettings": {
      "spWebLBFE": "spWebLBFE",
      "spCALBFE": "spCALBFE",
      "spWebLBBE": "spWebLBBE",
      "spCALBBE": "spCALBBE",
      "spWebLB": "spWeb",
      "spCALB": "spCALB",
      "spWebLBName": "spWebLoadBalancer",
      "spCALBName": "spCALoadBalancer"
    },
    "spCANAT": "spCANAT",
    "spWebProbe": "spWebProbe",
    "availabilitySets": {
      "spWebAvailabilitySetName": "[concat(parameters('spAGPrefix'),'-WEB')]",
      "spAppAvailabilitySetName": "[concat(parameters('spAGPrefix'),'-APP')]"
    },
    "vmSettings": {
      "spVMNames": {
        "spWebVMNames": [
          "[parameters('spWebVMName1')]",
          "[parameters('spWebVMName2')]"
        ],
        "spAppVMNames": [
          "[parameters('spAppVMName1')]",
          "[parameters('spAppVMName2')]"
        ]
      },
      "vmSetup": {
        "spImagePublisher": "MicrosoftSharePoint",
        "spImageOffer": "MicrosoftSharePointServer",
        "spImageSKU": "2013",
        "spDiskSize": 128,
        "spVMSize": "[parameters('spVMSize')]",
        "vmContainerName": "vhds",
        "vmList": [
          {
            "vmName": "[parameters('spAppVMName1')]",
            "vmAvailabilitySet": "[variables('ids').spAppAvailabilitySetName]"
          },
          {
            "vmName": "[parameters('spAppVMName2')]",
            "vmAvailabilitySet": "[variables('ids').spAppAvailabilitySetName]"
          },
          {
            "vmName": "[parameters('spWebVMName1')]",
            "vmAvailabilitySet": "[variables('ids').spWebAvailabilitySetName]"
          },
          {
            "vmName": "[parameters('spWebVMName2')]",
            "vmAvailabilitySet": "[variables('ids').spWebAvailabilitySetName]"
          }
        ],
        "rdpPort": 3389,
        "spCentralAdminPort": 80,
        "discStorageAccount": "[variables('spVMDiscStorageAccount')]",
        "diagnosticStorageAccount": "[variables('spVMDiagnoticStorageAccount')]"
      }
    },
    "availabilitySetsList": {
      "name": [
        "[variables('availabilitySets').spWebAvailabilitySetName]",
        "[variables('availabilitySets').spAppAvailabilitySetName]"
      ]
    },
    "generalParameters": {
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "manishabc123"
      }
    },
    "storageAccountDetails": [
      {
        "name": "[variables('spVMDiscStorageAccount')]",
        "sku": "[parameters('storageAccountType')]"
      },
      {
        "name": "[variables('spVMDiagnoticStorageAccount')]",
        "sku": "Standard_LRS"
      }
    ],
    "spVMDiscStorageAccount": "[concat(parameters('storageAccountNamePrefix'),1)]",
    "spVMDiagnoticStorageAccount": "[concat(parameters('storageAccountNamePrefix'),2)]",
    "spWebSubnetRef": "[concat(parameters('virtualNetworkName'),'/subnets/',parameters('spWebSubnetName'))]",
    "spAppSubnetRef": "[concat(parameters('virtualNetworkName'),'/subnets/',parameters('spAppSubnetName'))]",
    "sharepointCAfqdn": "[concat(variables('spCADNSPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "sharepointWebfqdn1": "[concat(parameters('dnsPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "ids": {
      "spWeblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",
      "spCAlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]",
      "spCAResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('spCAIPAddressName'))]",
      "spWebAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySets').spWebAvailabilitySetName)]",
      "spAppAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySets').spAppAvailabilitySetName)]"
    },
    "derivedIds": {
      "spWebLBFEConfigID": "[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
      "spWebProbeID": "[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
      "spWebBEAddressPoolID": "[concat(parameters('spWebApplicationGatewayBackendPool'),'/backendAddressPools/appGatewayBackendPool')]",
      "spCABEAddressPoolID": "[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
      "spCAlbFEConfigID": "[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
      "spCANATRuleID": "[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
    }
  },
  "resources": [
    {
      "name": "CreatingStorageAccounts",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','creatingStorageAccounts.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "generalParameters": {
            "value": "[variables('generalParameters')]"
          },
          "storageAccountDetails": {
            "value": "[variables('storageAccountDetails')]"
          }
        }
      }
    },
    {
      "name": "SettingUpSharepointCentralAdminPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','publicip-new.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "generalParameters": {
            "value": "[variables('generalParameters')]"
          },
          "publicIPAddressName": {
            "value": "[variables('spCAIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "dynamic"
          },
          "dnsPrefix": {
            "value": "[variables('spCADNSPrefix')]"
          }
        }
      }
    },
    {
      "name": "CreatingAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','availabilitySets.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "generalParameters": {
            "value": "[variables('generalParameters')]"
          },
          "spAvailabilitySetNames": {
            "value": "[variables('availabilitySetsList')]"
          }
        }
      }
    },
    {
      "name": "SettingUpLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpSharepointCentralAdminPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','setupLBs.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "generalParameters": {
            "value": "[variables('generalParameters')]"
          },
          "spCALBName": {
            "value": "[variables('lbSettings').spCALBName]"
          },
          "spCALBFE": {
            "value": "[variables('lbSettings').spCALBFE]"
          },
          "spCAResourceId": {
            "value": "[variables('ids').spCAResourceId]"
          },
          "spCALBBE": {
            "value": "[variables('lbSettings').spCALBBE]"
          },
          "spCANAT": {
            "value": "[variables('spCANAT')]"
          },
          "spCAlbFEConfigID": {
            "value": "[variables('derivedIds').spCAlbFEConfigID]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','creatingNICS.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "generalParameters": {
            "value": "[variables('generalParameters')]"
          },
          "spwebVMNameList": {
            "value": "[variables('vmSettings').spVMNames.spWebVMNames]"
          },
          "spWebSubnetRef": {
            "value": "[variables('spWebSubnetRef')]"
          },
          "spWebBEAddressPoolID": {
            "value": "[variables('derivedIds').spWebBEAddressPoolID]"
          },
          "spappVMNameList": {
            "value": "[variables('vmSettings').spVMNames.spAppVMNames]"
          },
          "spAppSubnetRef": {
            "value": "[variables('spAppSubnetRef')]"
          },
          "spCABEAddressPoolID": {
            "value": "[variables('derivedIds').spCABEAddressPoolID]"
          },
          "spCANATRuleID": {
            "value": "[variables('derivedIds').spCANATRuleID]"
          }
        }
      }
    },
    {
      "name": "CreatingSharepointVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','provisioningSharepointVMs-fromimage.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "generalParameters": {
            "value": "[variables('generalParameters')]"
          },
          "vmSetup": {
            "value": "[variables('vmSettings').vmSetup]"
          },
          "vmImage": {
            "value": "[parameters('spVmImage')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "spPreparationModulesURL": {
            "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareSharePointServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
          },
          "spPreparationFunction": {
            "value": "PrepareSharePointServerHA.ps1\\PrepareSharePointServerHA"
          },
          "spInstallUrl": {
            "value": "[concat(parameters('_artifactsLocation'),'/','cse','/','LanguagepackInstall.ps1', parameters('_artifactsLocationSasToken'))]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "DNSServer": {
            "value": "[parameters('adPdcNicIPAddress')]"
          }
        }
      }
    },
    {
      "name": "ConfiguringSharepoint",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingSharepointVirtualMachines"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','configuringSharePoint.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "spappVMNames": {
            "value": "[variables('vmSettings').spVMNames.spAppVMNames]"
          },
          "primarySqlReplicaVMName": {
            "value": "[parameters('primarySqlReplicaVMName')]"
          },
          "secondarySqlReplicaVMName": {
            "value": "[parameters('secondarySqlReplicaVMName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "spConfigurationModulesURL": {
            "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','ConfigureSharePointServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
          },
          "spConfigurationFunction": {
            "value": "ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sharePointSetupUserAccountUserName": {
            "value": "[parameters('sharePointSetupUserAccountUserName')]"
          },
          "sharePointFarmAccountUserName": {
            "value": "[parameters('sharePointFarmAccountUserName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlAOAGName": {
            "value": "[parameters('sqlAOAGName')]"
          },
          "administrationContentDatabaseName": {
            "value": "[variables('administrationContentDatabaseName')]"
          },
          "configDatabaseName": {
            "value": "[variables('configDatabaseName')]"
          },
          "contentDatabaseName": {
            "value": "[variables('contentDatabaseName')]"
          },
          "sharepointCAfqdn": {
            "value": "[variables('sharepointCAfqdn')]"
          },
          "sharePointSetupUserAccountPassword": {
            "value": "[parameters('sharePointSetupUserAccountPassword')]"
          },
          "sharePointFarmAccountPassword": {
            "value": "[parameters('sharePointFarmAccountPassword')]"
          },
          "sharePointFarmPassphrasePassword": {
            "value": "[parameters('sharePointFarmPassphrasePassword')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "spwebVMNames": {
            "value": "[variables('vmSettings').spVMNames.spWebVMNames]"
          },
          "sharepointFarmName": {
            "value": "[parameters('sharepointFarmName')]"
          },
          "sharepointWebfqdn": {
            "value": "[parameters('sharepointWebfqdn')]"
          },
          "spSiteTemplateName": {
            "value": "[parameters('spSiteTemplateName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[parameters('sharepointWebfqdn')]",
      "type": "string"
    },
    "cafqdn": {
      "value": "[variables('sharepointCAfqdn')]",
      "type": "string"
    }
  }
}
